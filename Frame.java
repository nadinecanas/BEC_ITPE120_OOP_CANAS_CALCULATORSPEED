/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package speedConverter;

/**
 *
 * @author liezel
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        cbFrom = new javax.swing.JComboBox<>();
        cbTo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 153, 0));

        txtFrom.setBackground(new java.awt.Color(255, 153, 255));

        txtTo.setEditable(false);
        txtTo.setBackground(new java.awt.Color(255, 153, 255));
        txtTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToActionPerformed(evt);
            }
        });

        cbFrom.setBackground(new java.awt.Color(204, 204, 255));
        cbFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mile/hour", "Mile/second", "Feet/hour", "Feet/second", "Inches/hour", "Inches/second", "Meter/hour", "Meter/second", "Kilometer/hour", "Kilometer/second", "Knot" }));

        cbTo.setBackground(new java.awt.Color(204, 204, 255));
        cbTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mile/hour", "Mile/second", "Feet/hour", "Feet/second", "Inches/hour", "Inches/second", "Meter/hour", "Meter/second", "Kilometer/hour", "Kilometer/second", "Knot" }));

        jButton1.setBackground(new java.awt.Color(204, 102, 255));
        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(txtTo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int num1 = Integer.parseInt(txtFrom.getText());
        if(cbFrom.getSelectedItem().toString()=="Mile/hour"){
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
            double result = num1*1.467;
            txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/2.237;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*1.609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1/1.151;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*5280;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*63360;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*17.6;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*1609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/2237;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Feet/second"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1/1.467;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/3.281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*1.097;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1/1.688;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/5280;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*43200;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*12;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*1609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/3281;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbTo.getSelectedItem().toString()=="Meter/second"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*2.237;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1*3.281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*3.6;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1*1.944;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/1609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*11811;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*141700;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*39.37;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/1000;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Kilometer/hour"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1/1.609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Foot/second"){
                double result = num1/1.097;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/3.6;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1/1.852;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/5794;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*3281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*39370;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*10.936;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*1000;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/3600;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Knot"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*1.151;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1*1.688;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/1.944;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*1.852;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/3128;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*6076;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*72910;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*20.254;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*1852;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/1944;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Mile/second"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1*5280;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1*1609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*5794;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1*1.944;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*11810;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*141700;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*39.37;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/1000;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Meter/hour"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1/1609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1/1097;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*1000;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1/1852;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*3.281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*39.37;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1/91.44;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/5.794e+6;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/3.6e+6;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Kilometer/second"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*2237;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1*3281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/1000;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1*1944;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1*1.181e+7;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*1.417e+8;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1*39370;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/1.609;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1*3.6e+6;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Inches/hour"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*63360;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1/43200;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1/141700;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*39370;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1*72910;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/hour"){
                double result = num1/12;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/1.417e+8;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1/3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/2.281e+8;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1/39.37;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString()=="Feet/hour"){
            if(cbTo.getSelectedItem().toString()=="Mile/hour"){
                double result = num1*5280;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Feet/second"){
                double result = num1/3600;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/second"){
                double result = num1*11810;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/hour"){
                double result = num1*3281;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Knot"){
                double result = num1*6076;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/hour"){
                double result = num1*12;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Kilometer/second"){
                double result = num1/1.181e+7;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Inches/second"){
                double result = num1/300;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Mile/second"){
                double result = num1/1.901e+7;
                txtTo.setText(String.valueOf(result));
            }
            if(cbTo.getSelectedItem().toString()=="Meter/hour"){
                double result = num1/3.281;
                txtTo.setText(String.valueOf(result));
            }
        }
        if(cbFrom.getSelectedItem().toString() == cbTo.getSelectedItem().toString()){
            txtTo.setText(String.valueOf(num1+".0"));
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFrom;
    private javax.swing.JComboBox<String> cbTo;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
